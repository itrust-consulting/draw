active: true
derived: false
header: |
  Load to or from Trick Service
level: '1.10'
links:
- TSPEC-EXPORTGRAPHONTS: null
- TSPEC-EXPORTGRAPHONTS1: null
- TSPEC-EXPORTPNGONTS: null
- TSPEC-EXPORTSSSONTS: null
- TSPEC-ExportAndLoadSSSOnTS: null
- TSPEC-ExportPictureTS: null
- TSPEC-LoadAndUpdateGraphOnTS: null
- TSPEC-SYNCTRICK: null
normative: true
ref: ''
reviewed: null
text: |
  | **Test procedure ID**   | TP-10 load from TS and export to TS test report |
  |-------------------------|------------------------------------------------|
  | **Executed by**         | Ritika Pande / itrust & R. Santos |
  | **Date of execution**   | 24/11/2022 & 29.03.2023  |
  | **Time of execution (duration)**   | 10:25 am -- 10:45 am &   19:00 pm               |
  | **Test cases covered**  | DRAW_TC_23,DRAW_TC_24, DRAW_TC_25, DRAW_TC_ID_32, DRAW_TC_ID_33, DRAW_TC_ID_34, DRAW_TC_ID_35, DRAW_TC_ID_44 |
  | **Requirements covered**        |   |
  | **List of SW versions subject to test**    |2.0.5|
  | **Test configuration details**     Â |DRAW v2.0.5 on Microsoft Edge|
  | **Preconditions for the test** |Windows 10/11|
  |**Expected input and expected output**| Export snapshot, dependency graph to TS<br> Load snapshot, dependency graph from TS<br>Export PNG to TS possible |

  | # Steps  | **Step Action**| **Expected result**  | **Comments**     |
  |------|-------------|------------------|-----------------------------|
  |**1,2,3,4** | Import excel <br>Generate report from default template<br><br>Edit the generated file   with bookmark TS_DependencyGraph<br><br>Export and verify the generated report using template   created in previous step      | log23.json matches graph23.json <br>Generated report contains the   graph created in step1. | **DRAW_TC_23<br>Passes**              |
  | **1,2,3**    | Import excel: tc24.xlsx<br>Export snapshot to TS<br>Load snapshot from TS<br>Save log24.json | Log24.json matches graph24.json      | **DRAW_TC_24<br>Passes**       |
  | **1,2,3,4,5**  | Load dependency graph from TS<br>Import excel tc25.xlsx<br>Update dependency graph  on TS<br>Clear and Load dependency graph from TS<br>Save log25.json<br>Reset setep<br>        | Log25.json matches graph25.json       | **DRAW_TC_25<br>Passes** |
  | **1** | Open tests/tests_manual/graph_syncts.json    |  Graph gets loaded into white board | **DRAW_TC_ID_32 Step1 Passes** |
  | **2** | Sync with Trick Service  (Choose demo.trickservice.com) (Demo UG, TestingILR,0.4); Cho demand - electricity <br> merge: Customer Management -> Customer Management - ose following: <br> merge: Balancing offer and demand -> Balancing offer and electricity <br> merge: Grid Development & Services - electricity -> Grid Development & Services <br> merge: ILR_GAS_Air conditioning > Air conditioning <br> merge: Allocation management - gas > Allocation management <br> merge: Bad data detection system - electricity -> Bad data detection system <br> Add to TS: Connection Point -> Add to TS ? <br> delete from Graph: Connection facilities Transport -> delete from Graph <br> | Save and compare file with graph_syncts_after.json. | **DRAW_TC_ID_32 Step2 Passes** |
  | **3** | Save -> Update Dependency Graph on Trick Service (Choose demo.trickservice.com) (Demo UG, TestingILR,0.4) |  The snapshot should be saved in Trick |**DRAW_TC_ID_32 Step3 Passes** |
  | **4** | Clear Working Area; Open-> Load dependency graph from Trick Service (Choose demo.trickservice.com) (Demo UG, TestingILR,0.4) |  The snapshot should be loaded from Trick Service |**DRAW_TC_ID_32 Step4 Passes** |
  | **5** | Save the graph as log/graph.json file  | the log/graph.json must match tests/tests_manual/graph_syncts_after.json |**DRAW_TC_ID_32 Step5 Passes** |
  | **6** | Reset: Clear Working Area; Open->tests/tests_manual/graph_reset_syncts.json; Synchronize -> Set all to -> Upload Graph->TS; Save ->  Update Dependency Graph on Trick Service | Reset Step to save the graph back on Trick Service | **DRAW_TC_ID_32 Step6 Passes** |
  | **1** | Open tests/tests_manual/graph_tsdep_unconnected.json |  Graph with 2 nodes gets loaded into white board | **DRAW_TC_ID_33 Step1 Passes** |
  | **2** | Save -> Update Dependency Graph on Trick Service (Choose demo.trickservice.com) (Demo UG, TestingILR,0.5) |  The dependency graph should be saved in Trick | **DRAW_TC_ID_33 Step2 Passes** |
  | **3** | Clear Working Area; Open-> Load dependency graph from Trick Service (Choose demo.trickservice.com) (Demo UG, TestingILR,0.5) |  The snapshot should be loaded from Trick Service with all 5 nodes | **DRAW_TC_ID_33 Step3 Passes** |
  | **4** | Save the graph as log/graph.json file  | the log/graph.json must match tests/tests_manual/graph_syncts1.json | **DRAW_TC_ID_33 Step4 Passes** |
  | **5** | Reset: Clear Working Area; Open->tests/tests_manual/graph_reset_syncts1.json; Synchronize -> Set all to -> Upload Graph->TS; Save ->  Update Dependency Graph on Trick Service | Reset Step to save the graph back on Trick Service | **DRAW_TC_ID_33 Step5 Passes** |
  | **1** | Open tests/tests_manual/graph1.json    |  Graph gets loaded into white board | **DRAW_TC_ID_34 Step1 Passes** |
  | **2** | Save -> Export as PNG on Trick Service (Choose demo.trickservice.com) (Demo UG, TestingILR,0.8) |  The PNG should be saved in Trick | **DRAW_TC_ID_34 Step2 Passes** |
  | **3** | Open Trick Service Demo for same Analysis | Goto: Open: Goto: Settings: Export -> Word report Choose the default: Internal Template: Click Export button. Rename the saved exported File as   DemoTestingTemplate.docx | Export DemoTestingTemplate.docx without error. | **DRAW_TC_ID_34 Step3 Passes** |
  | **4** | Open DemoTestingTemplate.docx; Enable editing. Add any section in the Template.docx. <br> Insert a BookMark named TS_DependencyGraph (TS_DependencyGraph) in any section in the document. Save the file. | Save without error. Not able to see this Bookmark (Check with Ensuif sometimes) | **DRAW_TC_ID_34 Step4 Passes** |
  | **5** | Goto TrickService again. Export Word Report again. Specify External template this time. <br> In this input box specify the path of DemoTestingTemplate.docx. | Exported file shuld now contain the section where the bookmark was inserted with dependency graph PNG | **DRAW_TC_ID_34 Step5 Passes** |
  | **1** | Open tests/tests_manual/graph1.json    |  Graph gets loaded into white board |**DRAW_TC_ID_35 Step1 Passes** |
  | **2** | Save -> Export as Snapshot on Trick Service (Choose demo.trickservice.com) (Demo UG, TestingILR,0.3) |  The snapshot saved in Trick | **DRAW_TC_ID_35 Step2 Passes** |
  | **3** | Clear Working Area; Open-> Load Snapshot from Trick Service (Choose demo.trickservice.com) (Demo UG, TestingILR,0.3) |  The snapshot loaded from Trick Service | **DRAW_TC_ID_35 Step3 Passes** |
  | **4** | Save the graph as log/graph.json file  | the log/graph.json must matches tests/tests_manual/graph1.json |**DRAW_TC_ID_35 Step4 Passes** |
  | **5** | Clear Working Area; Save -> Export as Snapshot on Trick Service  | Reset Step to save the graph back on Trick Service | **DRAW_TC_ID_35 Step5 Passes** |
  | **1** | Open tests/tests_manual/graph1.json    |  Graph gets loaded into white board | **DRAW_TC_ID_44 Step1 Passes** |
  | **2** | Save -> Update dependency graph on Trick Service (Choose demo.trickservice.com) (Demo UG, test3,0.1) | An error message present as no synchronization had hapenned | **DRAW_TC_ID_44 Step2 Passes** |

   |SPR open       |        None |
   |---------------|-------------|
   |SPR closed     |        None |

   |Total Steps |  Steps Passes |  Steps Failed |     Steps not executed |
   |------------|---------------|----------------|------------------------|
   |35         |  35           |  0             |     0                  |

  |Result    |       Passes |
  |----------------|--------------|

  |Annex     |  Refer Annex for evidence of log and commands executed.|
